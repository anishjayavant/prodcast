name: Prodcast

on:
  push:
    branches:
      - main
      - releases/**
  pull_request:
    branches:
      - main

# cancel in progress runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: prodcast
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - "5432:5432"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/debug/build
            target/debug/incremental
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Sqlx CLI
        run: cargo install sqlx-cli --no-default-features --features postgres
      - name: Migrate
        run: DATABASE_URL=postgres://prodcast:password@localhost/newsletter sqlx migrate run
      - name: Test
        run: cargo test --all-features

  fmt:
    name: Fmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: prodcast
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - "5432:5432"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-
      - name: Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Sqlx CLI
        run: cargo install sqlx-cli --no-default-features --features postgres
      - name: Migrate
        run: DATABASE_URL=postgres://prodcast:password@localhost/newsletter sqlx migrate run
      - name: Clippy
        run: cargo clippy --workspace --all-targets --no-deps -- -D warnings

  checkdocs:
    name: CheckDocs
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: prodcast
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - "5432:5432"
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/debug/build
            target/debug/incremental
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-
      - name: Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Sqlx CLI
        run: cargo install sqlx-cli --no-default-features --features postgres
      - name: Migrate
        run: DATABASE_URL=postgres://prodcast:password@localhost/newsletter sqlx migrate run
      - name: Check Docs
        run: RUSTDOCFLAGS="-D warnings" cargo doc --no-deps --document-private-items
