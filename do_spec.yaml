#! spec.yaml
name: prodcast
region: nyc
# databases
databases:
  - engine: PG
    # DB name
    name: newsletter
    # PG version
    version: "15"
    # use minimal sizing
    size: db-s-dev-database
    num_nodes: 1
services:
  - name: migrations
    # Relative to the repository root
    dockerfile_path: docker/sqlx.Dockerfile
    source_dir: .
    github:
      repo: anishjayavant/prodcast
      branch: main
      deploy_on_push: true
    # Environment variables for our app
    envs:
      - key: DATABASE_URL
        scope: RUN_TIME
        value: postgres://${newsletter.USERNAME}:${newsletter.PASSWORD}@${newsletter.HOSTNAME}:${newsletter.PORT}/${newsletter.DATABASE}?sslmode=require
    # Command to run the migrations
    command: ["migrate", "run"]
    instance_count: 1
    instance_size_slug: basic-xxs
    # We don't need to expose this service to the internet
    routes: []
  - name: prodcast
    # Relative to the repository root
    dockerfile_path: docker/prodcast.Dockerfile
    source_dir: .
    github:
      repo: anishjayavant/prodcast
      branch: main
      deploy_on_push: true
    # Active probe used by DigitalOcean's to ensure our application is healthy
    health_check:
      http_path: /healthz
    http_port: 8000
    instance_count: 1
    instance_size_slug: basic-xxs
    # All incoming requests should be routed to our app
    routes:
      - path: /
    # Environment variables for our app
    envs:
      - key: APP_ENV
        scope: RUN_TIME
        value: prod
      - key: APP_DATABASE__USER
        scope: RUN_TIME
        value: ${newsletter.USERNAME}
      - key: APP_DATABASE__PASSWORD
        scope: RUN_TIME
        value: ${newsletter.PASSWORD}
      - key: APP_DATABASE__HOST
        scope: RUN_TIME
        value: ${newsletter.HOSTNAME}
      - key: APP_DATABASE__PORT
        scope: RUN_TIME
        value: ${newsletter.PORT}
      - key: APP_DATABASE__DATABASE_NAME
        scope: RUN_TIME
        value: ${newsletter.DATABASE}
